## atl4u见闻录1: 从零开始才放心
`导语: 从零(数据清洗)开始才放心`

经过人类周期1个月的抚育
本熊的atl4u终于产出1张plot图
不幸效果堪比狗SHI
既不能投入于coding学习的时间
进行炫酷的可视化
也未能设计出有趣的反映coding状态的指标
更可气的是该SHI的料还挺少
只能处理1周数据
惟感叹
苦酒入喉心作痛
狗生苦短coding难...

秉承的再难也要活下去的优良传统
特记录一路抚SHI的坑坎见闻
为自己今后岁月注定将反复涌现的SHI作
留作纪念...

### 1. 只容纳1周数据的csv
**问: 为啥只能容纳1周数据？**
答: 因为这csv乃本熊手动录入st3

**问: 为啥不用atimelogger2导出csv?**
答: 因为导出的csv是这样的

```
"play","0.6","2017-06-01 21:15","2017-06-01 21:41"
"Py","3.3","2017-06-01 21:11","2017-06-01 21:14"
```
   
**问: atimelogger2导出的csv格式需要2点调整**
答1: 相同的`活动类别` 需要合并
答2: `持续时间` 和 `日期` 都需要调整为统一口径的unix秒数 

**问: 为什么不用已经清洗好的zq_clean_data数据？**
答: 因为没有参与数据清洗过程, 压根看不懂已经清洗完成的数据

```
1483228080.0  livin   30120.0
1483231380.0  livin   3300.0
```

**问: 本熊手工录入的csv是怎样的？**
答: 如下(63=63%, 1天=24hrs=100%)

```
cost,py,read,eco,play,pyb,gf,fit
63,0,2.8,0,7.6,13.4,8.7,4.4
53.6,0,3.5,28.2,11.0,0,3.7,0
56.4,9.4,6.5,11.8,4.3,0.9,4.2,6.5
77.5,0,7.2,0,5.9,0,4.9,4.6
65.5,14.2,0,10.2,3.1,1,2.9,3.1
77.5,0,7.2,0,5.9,0,4.9,4.6
```

### 2. 无法设置index的dataframe

**问: 为啥dataframe需要index?**
答: 因为可以做selection, 相当于表格切割/选中

**问: 为啥dataframe无法设置index?**
答: 因为本熊用了1条命令, 从csv直接生成dataframe

```
df = pd.read_csv('sample.csv')
```

![dataframe](https://user-images.githubusercontent.com/19412465/27952570-555e8058-633b-11e7-9888-b8610bcf9c7d.png)

### 3. 设置index却丢失数据的dataframe

**问: 为啥会丢失数据？**

答: 本熊不知, csv记录数据全变为NaN

```
 index=pd.date_range('2017/06/26', periods=5, freq='B')
 df = pd.DataFrame(pd.read_csv('sample.csv'), index=index)
 ```

![dataframe_nan](https://user-images.githubusercontent.com/19412465/27953309-e301b8a6-633d-11e7-878c-3c88639a660c.png)

### 4. 无法体现差异化的plot图

**问: 为啥无法体现差异化？**

答1: 不会用ggplot控制线条颜色,样式等属性
答2: 在数据导入之处, 数据单位是%, 只有从1%-100%的变化幅度, 呈在plot图里, 趋势几乎为1条直线

![ggplot](https://user-images.githubusercontent.com/19412465/27952576-5bd936e4-633b-11e7-9aa4-9ba5c60ec5a6.png)

`总结: 当本熊妄图跳过clean_data手动录入csv时, 祸根已经埋下. 从cleandata开始才能避免祸根, 从零开始才放心.`